import re
from aiogram import types
from aiogram.dispatcher import FSMContext
import aiosqlite
import random
import string

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE = 'database.db'

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
def generate_anonymous_id():
    random_part = ''.join(random.choices(string.ascii_letters + string.digits, k=10))
    return f"_{random_part}"

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
def is_valid_nick(nick):
    pattern = r"^[a-zA-Z0-9_]+$"
    if 7 <= len(nick) <= 30 and re.match(pattern, nick):
        return True
    return False

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async def get_connection():
    return await aiosqlite.connect(DATABASE)

# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
async def save_nick(user_id, nick):
    conn = await get_connection()
    async with conn.cursor() as cursor:
        await cursor.execute("UPDATE users SET anonymous_id = ? WHERE id = ?", (nick, user_id))
    await conn.commit()
    await conn.close()

# –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async def get_nick(user_id):
    conn = await get_connection()
    async with conn.cursor() as cursor:
        await cursor.execute("SELECT anonymous_id FROM users WHERE id = ?", (user_id,))
        result = await cursor.fetchone()
    await conn.close()
    return result[0] if result else None

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /nick
async def cmd_nick(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    new_nick = message.get_args()

    if new_nick:
        if is_valid_nick(new_nick):
            await save_nick(user_id, new_nick)
            # —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π"
            markup = types.InlineKeyboardMarkup()
            share_button = types.InlineKeyboardButton(
                "üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π",
                url=f"https://t.me/share/url?url=%D0%97%D0%B0%D0%B4%D0%B0%D0%B9%20%D0%BC%D0%BD%D0%B5%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B9%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%0A%F0%9F%91%89%20http://t.me/Ietsqbot?start={new_nick}"
            )
            markup.add(share_button)

            await message.answer(
                "<i>–ì–æ—Ç–æ–≤–æ! ‚úÖ</i>\n\n"
                "<i>–¢–≤–æ—è –Ω–æ–≤–∞—è —Å—Å—ã–ª–∫–∞:</i>\n"
                f"üîó <code><a href='t.me/Ietsqbot?start={new_nick}'>t.me/Ietsqbot?start={new_nick}</a>\n\n</code>"
                "<i>–ß—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É, –ø—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–Ω–∏ –Ω–∞ –Ω–µ—ë. –ó–∞—Ç–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏ –≤ Instagram –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü. —Å–µ—Ç—è—Ö</i>",
                disable_web_page_preview=True,
                parse_mode="HTML",
                reply_markup=markup
            )
        else:
            await message.answer(
                "<b>üìõ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–∞.</b>\n\n"
                "<i>–ù–∏–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –∑–Ω–∞–∫ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è, "
                "–∞ —Ç–∞–∫–∂–µ –∏–º–µ—Ç—å –¥–ª–∏–Ω—É –æ—Ç 7 –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤.</i>\n\n"
                "<i>–ù–∞–ø—Ä–∏–º–µ—Ä:</i> `<code>/nick MrDurov</code>` <i>–∏–ª–∏</i> `<code>/nick Alexandr</code>`",
                disable_web_page_preview=True,
                parse_mode="HTML"
            )
    else:
        current_nick = await get_nick(user_id)
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å–∏—Ç—å"
        reset_button = types.InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data="reset_nick")
        markup = types.InlineKeyboardMarkup().add(reset_button)

        await message.answer(
            f"<i>–°–µ–π—á–∞—Å –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:</i> <code>t.me/Ietsqbot?start={current_nick}</code>\n\n"
            "<i>–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ</i> <code>/nick [text]</code>, <i>–Ω–∞–ø—Ä–∏–º–µ—Ä</i> <code>/nick MrDurov</code>\n\n"
            "<i> ‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Å—ã–ª–∫–∏, —Å—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π!</i>",
            disable_web_page_preview=True,
            parse_mode="HTML",
            reply_markup=markup
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å–∏—Ç—å"
async def reset_nick_callback(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    new_nick = generate_anonymous_id()
    await save_nick(user_id, new_nick)

    await callback_query.answer("–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞!", show_alert=True)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–æ–π –∏ –ø–æ–ª–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    await callback_query.message.edit_text(
        f"<i>–°–µ–π—á–∞—Å –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:</i> <code>t.me/Ietsqbot?start={new_nick}</code>\n\n"
        "<i>–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ</i> <code>/nick [text]</code>, <i>–Ω–∞–ø—Ä–∏–º–µ—Ä</i> <code>/nick MrDurov</code>\n\n"
        "<i> ‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Å—ã–ª–∫–∏, —Å—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π!</i>",
        disable_web_page_preview=True,
        parse_mode="HTML",
        reply_markup=callback_query.message.reply_markup  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–Ω–æ–ø–∫—É
    )